{
	"info": {
		"_postman_id": "0c320abb-cf0b-44cd-be6f-f41bffa0e4e0",
		"name": "Stripe",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7157654"
	},
	"item": [
		{
			"name": "Test Clocks",
			"item": [
				{
					"name": "Create Test Clock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"test_clock_id\", jsonData.id);\r",
									"pm.collectionVariables.set(\"customer_id\", \"\");\r",
									"pm.collectionVariables.set(\"subscription_id\", \"\");\r",
									"pm.collectionVariables.set(\"subscription_schedule_id\", \"\");\r",
									"pm.collectionVariables.set(\"subscription_schedule_current_phase\", \"\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const today = new Date();\r",
									"pm.collectionVariables.set('frozen_time', Math.floor(today / 1000));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"frozen_time\": \"{{frozen_time}}\",\r\n    \"name\": \"Case 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/test-clocks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"test-clocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Advance Test Clock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const frozen_time = pm.variables.get('frozen_time');\r",
									"const advancefrozen_time = new Date(frozen_time * 1000);\r",
									"advancefrozen_time.setDate(advancefrozen_time.getDate() + 5);\r",
									"pm.collectionVariables.set('frozen_time', Math.floor(advancefrozen_time / 1000));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"frozen_time\": \"{{frozen_time}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/test-clocks/{{test_clock_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"test-clocks",
								"{{test_clock_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Test Clock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"test_clock_id\", \"\");\r",
									"pm.collectionVariables.set(\"customer_id\", \"\");\r",
									"pm.collectionVariables.set(\"subscription_id\", \"\");\r",
									"pm.collectionVariables.set(\"subscription_schedule_id\", \"\");\r",
									"pm.collectionVariables.set(\"subscription_schedule_current_phase\", \"\");\r",
									"pm.collectionVariables.set(\"frozen_time\", \"\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{base_url}}/test-clocks/{{test_clock_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"test-clocks",
								"{{test_clock_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"customer_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"lorem.ipsum@test.com\",\r\n    \"test_clock\": \"{{test_clock_id}}\",\r\n    \"payment_method\": \"pm_card_visa\",\r\n    \"invoice_settings\": {\r\n        \"default_payment_method\": \"pm_card_visa\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscriptions",
			"item": [
				{
					"name": "Create Subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"subscription_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customer\": \"{{customer_id}}\",\r\n    \"items\": [\r\n        {\r\n            \"price\": \"price_1NybrkLAtDnOXbR0qKXtLuQJ\",\r\n            \"quantity\": 1\r\n        }\r\n    ],\r\n    \"expand\": [\r\n        \"latest_invoice.payment_intent\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscriptions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // Use \"SUNSCRIPTION ITEM ID\" from stripe to update the quantity of the product\r\n    // Use \"PRICING API ID\" from stripe to add a new product into subscription\r\n    \"items\": [\r\n        {\r\n            \"price\": \"price_1NybtPLAtDnOXbR0u4PooKn1\",\r\n            \"quantity\": 40\r\n        }\r\n    ],\r\n    \"expand\": [\r\n        \"latest_invoice.payment_intent\"\r\n    ],\r\n    \"enable_incomplete_payments\": \"false\",\r\n    // \"proration_date\": 1697038730,\r\n    \"proration_behavior\": \"always_invoice\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscriptions/{{subscription_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscriptions",
								"{{subscription_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Subscription Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"subscription_schedule_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_subscription\": \"{{subscription_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscriptions/subscription-schedule",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscriptions",
								"subscription-schedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscriptions/{{subscription_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscriptions",
								"{{subscription_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscription Items",
			"item": [
				{
					"name": "Update Subscription Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    // Use \"SUNSCRIPTION ITEM ID\" from stripe to update the quantity of the product\r\n    // Use \"PRICING API ID\" from stripe to add a new product into subscription \r\n    \"items\": [\r\n        {\r\n            \"id\": \"si_OmBL7N5EHMBXqB\",\r\n            \"quantity\": 50\r\n        }\r\n    ],\r\n    \"expand\": [\r\n        \"latest_invoice.payment_intent\"\r\n    ],\r\n    \"off_session\": \"true\",\r\n    \"enable_incomplete_payments\": \"false\",\r\n    \"proration_behavior\": \"always_invoice\" // create_prorations | always_invoice\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscriptions/{{subscription_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscriptions",
								"{{subscription_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscription Schedules",
			"item": [
				{
					"name": "Update Subscription Schedule",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"proration_behavior\": \"always_invoice\",\r\n    \"end_behavior\": \"release\",\r\n    \"phases\": [\r\n        {{subscription_schedule_current_phase}},\r\n        {\r\n            \"proration_behavior\": \"always_invoice\",\r\n            \"items\": [\r\n                {\r\n                    \"price\": \"price_1NybtPLAtDnOXbR0u4PooKn1\",\r\n                    \"quantity\": 40\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscription-schedules/{{subscription_schedule_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscription-schedules",
								"{{subscription_schedule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Subscription Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"const phases = jsonData.phases;\r",
									"const currentPhase = {\r",
									"    items: phases[0].items.map((item) => ({\r",
									"        price: item.price,\r",
									"        quantity: item.quantity,\r",
									"    })),\r",
									"    start_date: phases[0].start_date,\r",
									"    end_date: phases[0].end_date,\r",
									"}\r",
									"\r",
									"pm.collectionVariables.set(\"subscription_schedule_current_phase\", JSON.stringify(currentPhase, null, 2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscription-schedules/{{subscription_schedule_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscription-schedules",
								"{{subscription_schedule_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invoices",
			"item": [
				{
					"name": "Retrieve Upcoming Invoice",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customer\": \"{{customer_id}}\",\r\n    \"subscription\": \"{{subscription_id}}\",\r\n    \"subscription_proration_date\": 1698100850,\r\n    \"subscription_items\": [\r\n        {\r\n            \"id\": \"si_On26v0nuVKjoaH\", // Plan\r\n            \"quantity\": 2\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/invoices/upcoming",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"invoices",
								"upcoming"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Upcoming Invoice Items",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"limit\": 5,\r\n    \"customer\": \"{{customer_id}}\",\r\n    \"subscription\": \"{{subscription_id}}\",\r\n    \"subscription_proration_date\": 1698100850,\r\n    \"subscription_proration_behavior\": \"always_invoice\",\r\n    \"subscription_items\": [\r\n        {\r\n            \"id\": \"si_On26v0nuVKjoaH\", // Plan\r\n            \"quantity\": 20\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/invoices/upcoming/items",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"invoices",
								"upcoming",
								"items"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "frozen_time",
			"value": ""
		},
		{
			"key": "test_clock_id",
			"value": ""
		},
		{
			"key": "customer_id",
			"value": ""
		},
		{
			"key": "subscription_id",
			"value": ""
		},
		{
			"key": "subscription_schedule_id",
			"value": ""
		},
		{
			"key": "subscription_schedule_current_phase",
			"value": "",
			"type": "string"
		}
	]
}